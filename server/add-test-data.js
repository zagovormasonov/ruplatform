const { Pool } = require('pg');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const pool = new Pool({
  connectionString: 'postgresql://gen_user:OCS(ifoR||A5$~@40e0a3b39459bee0b2e47359.twc1.net:5432/default_db',
  ssl: {
    rejectUnauthorized: false
  }
});

async function addTestData() {
  try {
    console.log('üîß Spiritual Platform: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    const client = await pool.connect();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-—ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    const user1 = await client.query(`
      INSERT INTO users (email, password_hash, first_name, last_name, role, city, phone)
      VALUES ('anna@example.com', '$2b$10$hash1', '–ê–Ω–Ω–∞', '–°–º–∏—Ä–Ω–æ–≤–∞', 'expert', '–ú–æ—Å–∫–≤–∞', '+7 (999) 123-45-67')
      ON CONFLICT (email) DO UPDATE SET 
        first_name = EXCLUDED.first_name,
        last_name = EXCLUDED.last_name
      RETURNING id
    `);

    const user2 = await client.query(`
      INSERT INTO users (email, password_hash, first_name, last_name, role, city, phone)
      VALUES ('mikhail@example.com', '$2b$10$hash2', '–ú–∏—Ö–∞–∏–ª', '–ü–µ—Ç—Ä–æ–≤', 'expert', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '+7 (999) 234-56-78')
      ON CONFLICT (email) DO UPDATE SET 
        first_name = EXCLUDED.first_name,
        last_name = EXCLUDED.last_name
      RETURNING id
    `);

    const user3 = await client.query(`
      INSERT INTO users (email, password_hash, first_name, last_name, role, city, phone)
      VALUES ('elena@example.com', '$2b$10$hash3', '–ï–ª–µ–Ω–∞', '–í–∞—Å–∏–ª—å–µ–≤–∞', 'expert', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '+7 (999) 345-67-89')
      ON CONFLICT (email) DO UPDATE SET 
        first_name = EXCLUDED.first_name,
        last_name = EXCLUDED.last_name
      RETURNING id
    `);

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã');

    // –ü–æ–ª—É—á–∞–µ–º ID –≥–æ—Ä–æ–¥–æ–≤
    const moscowCity = await client.query(`SELECT id FROM cities WHERE name = '–ú–æ—Å–∫–≤–∞'`);
    const spbCity = await client.query(`SELECT id FROM cities WHERE name = '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'`);
    const novosCity = await client.query(`SELECT id FROM cities WHERE name = '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'`);

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    let expert1, expert2, expert3;
    
    try {
      expert1 = await client.query(`
        INSERT INTO expert_profiles (user_id, bio, rating, reviews_count, city_id, is_active)
        VALUES ($1, '–¢–∞—Ä–æ–ª–æ–≥ —Å 10-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –ü–æ–º–æ–≥–∞—é —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.', 4.8, 124, $2, true)
        RETURNING id
      `, [user1.rows[0].id, moscowCity.rows[0]?.id]);
    } catch (e) {
      expert1 = await client.query(`SELECT id FROM expert_profiles WHERE user_id = $1`, [user1.rows[0].id]);
    }

    try {
      expert2 = await client.query(`
        INSERT INTO expert_profiles (user_id, bio, rating, reviews_count, city_id, is_active)
        VALUES ($1, '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –¥—É—Ö–æ–≤–Ω–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é. –ü—Ä–æ–≤–æ–∂—É —Å–µ–∞–Ω—Å—ã —Ä–µ–π–∫–∏.', 4.9, 89, $2, true)
        RETURNING id
      `, [user2.rows[0].id, spbCity.rows[0]?.id]);
    } catch (e) {
      expert2 = await client.query(`SELECT id FROM expert_profiles WHERE user_id = $1`, [user2.rows[0].id]);
    }

    try {
      expert3 = await client.query(`
        INSERT INTO expert_profiles (user_id, bio, rating, reviews_count, city_id, is_active)
        VALUES ($1, '–ê—Å—Ç—Ä–æ–ª–æ–≥ –∏ –Ω—É–º–µ—Ä–æ–ª–æ–≥. –°–æ—Å—Ç–∞–≤–ª—è—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∏ —Ä–∞—Å—á–µ—Ç—ã.', 4.7, 156, $2, true)
        RETURNING id
      `, [user3.rows[0].id, novosCity.rows[0]?.id]);
    } catch (e) {
      expert3 = await client.query(`SELECT id FROM expert_profiles WHERE user_id = $1`, [user3.rows[0].id]);
    }

    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã');

    // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–º–∞—Ç–∏–∫
    const taroTopic = await client.query(`SELECT id FROM topics WHERE name = '–¢–∞—Ä–æ'`);
    const astroTopic = await client.query(`SELECT id FROM topics WHERE name = '–ê—Å—Ç—Ä–æ–ª–æ–≥–∏—è'`);
    const reikiTopic = await client.query(`SELECT id FROM topics WHERE name = '–†–µ–π–∫–∏'`);
    const meditationTopic = await client.query(`SELECT id FROM topics WHERE name = '–ú–µ–¥–∏—Ç–∞—Ü–∏—è'`);
    const numeroTopic = await client.query(`SELECT id FROM topics WHERE name = '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è'`);

    // –°–≤—è–∑—ã–≤–∞–µ–º —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Å —Ç–µ–º–∞—Ç–∏–∫–∞–º–∏
    if (taroTopic.rows[0] && astroTopic.rows[0]) {
      try {
        await client.query(`
          INSERT INTO expert_topics (expert_id, topic_id) 
          VALUES ($1, $2), ($1, $3)
        `, [expert1.rows[0].id, taroTopic.rows[0].id, astroTopic.rows[0].id]);
      } catch (e) { /* –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã */ }
    }

    if (reikiTopic.rows[0] && meditationTopic.rows[0]) {
      try {
        await client.query(`
          INSERT INTO expert_topics (expert_id, topic_id) 
          VALUES ($1, $2), ($1, $3)
        `, [expert2.rows[0].id, reikiTopic.rows[0].id, meditationTopic.rows[0].id]);
      } catch (e) { /* –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã */ }
    }

    if (astroTopic.rows[0] && numeroTopic.rows[0]) {
      try {
        await client.query(`
          INSERT INTO expert_topics (expert_id, topic_id) 
          VALUES ($1, $2), ($1, $3)
        `, [expert3.rows[0].id, astroTopic.rows[0].id, numeroTopic.rows[0].id]);
      } catch (e) { /* –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã */ }
    }

    console.log('‚úÖ –¢–µ–º–∞—Ç–∏–∫–∏ —Å–≤—è–∑–∞–Ω—ã —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏');

    // –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏
    try {
      await client.query(`
        INSERT INTO services (expert_id, title, description, price, duration_minutes, service_type, is_active)
        VALUES 
          ($1, '–†–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ', '–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç –¢–∞—Ä–æ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏', 2000, 60, 'online', true),
          ($1, '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø', '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞', 3000, 90, 'online', true),
          ($2, '–°–µ–∞–Ω—Å –†–µ–π–∫–∏', '–ò—Å—Ü–µ–ª–µ–Ω–∏–µ –∏ –≥–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏—è —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤', 3500, 90, 'offline', true),
          ($2, '–ì—Ä—É–ø–ø–æ–≤–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è', '–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö', 1500, 60, 'offline', true),
          ($3, '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', '–†–∞—Å—á–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π', 2500, 75, 'online', true),
          ($3, '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∞', '–†–∞–∑–±–æ—Ä –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑', 4000, 120, 'online', true)
      `, [expert1.rows[0].id, expert2.rows[0].id, expert3.rows[0].id]);
    } catch (e) {
      console.log('–£—Å–ª—É–≥–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
    }

    console.log('‚úÖ –£—Å–ª—É–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    client.release();
    
    console.log('üéâ Spiritual Platform: –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    console.log('üìä –î–æ–±–∞–≤–ª–µ–Ω–æ:');
    console.log('   - 3 —ç–∫—Å–ø–µ—Ä—Ç–∞ (–ê–Ω–Ω–∞, –ú–∏—Ö–∞–∏–ª, –ï–ª–µ–Ω–∞)');
    console.log('   - –°–≤—è–∑–∏ —Å —Ç–µ–º–∞—Ç–∏–∫–∞–º–∏');
    console.log('   - 6 —É—Å–ª—É–≥');
    console.log('üîó –¢–µ–ø–µ—Ä—å –ø–æ–∏—Å–∫ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
  } catch (error) {
    console.error('‚ùå Spiritual Platform: –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await pool.end();
  }
}

addTestData();
