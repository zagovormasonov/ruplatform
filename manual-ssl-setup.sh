#!/bin/bash

echo "üîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –±–µ–∑ certbot..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
create_self_signed_cert() {
    echo "üìù –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    sudo openssl genrsa -out /etc/ssl/private/soulsynergy.ru.key 2048

    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    sudo openssl req -new -key /etc/ssl/private/soulsynergy.ru.key \
        -out /etc/ssl/certs/soulsynergy.ru.csr \
        -subj "/C=RU/ST=Moscow/L=Moscow/O=SoulSynergy/CN=soulsynergy.ru"

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (–Ω–∞ 365 –¥–Ω–µ–π)
    sudo openssl x509 -req -days 365 -in /etc/ssl/certs/soulsynergy.ru.csr \
        -signkey /etc/ssl/private/soulsynergy.ru.key \
        -out /etc/ssl/certs/soulsynergy.ru.crt

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    sudo chmod 600 /etc/ssl/private/soulsynergy.ru.key
    sudo chmod 644 /etc/ssl/certs/soulsynergy.ru.crt

    echo "‚úÖ –°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è standalone —Ä–µ–∂–∏–º–∞ certbot
try_standalone_certbot() {
    echo "üåê –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ standalone —Ä–µ–∂–∏–º..."

    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx
    sudo systemctl stop nginx

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ standalone —Ä–µ–∂–∏–º–µ
    sudo certbot certonly --standalone --agree-tos --no-eff-email \
        -d soulsynergy.ru -d www.soulsynergy.ru

    if [ $? -eq 0 ]; then
        echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω –≤ standalone —Ä–µ–∂–∏–º–µ"

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è nginx
        sudo ln -sf /etc/letsencrypt/live/soulsynergy.ru/cert.pem /etc/ssl/certs/soulsynergy.ru.crt
        sudo ln -sf /etc/letsencrypt/live/soulsynergy.ru/privkey.pem /etc/ssl/private/soulsynergy.ru.key

        # –ó–∞–ø—É—Å–∫ nginx
        sudo systemctl start nginx
        return 0
    else
        echo "‚ùå Standalone —Ä–µ–∂–∏–º –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
        sudo systemctl start nginx
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ nginx —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏
configure_nginx_ssl() {
    echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å SSL..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏
    sudo tee /etc/nginx/sites-available/ruplatform-ssl << 'EOF'
server {
    listen 80;
    listen [::]:80;
    server_name soulsynergy.ru www.soulsynergy.ru;

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ Let's Encrypt –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    location ^~ /.well-known/acme-challenge/ {
        alias /var/www/html/.well-known/acme-challenge/;
        try_files $uri =404;
    }

    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name soulsynergy.ru www.soulsynergy.ru;

    ssl_certificate /etc/ssl/certs/soulsynergy.ru.crt;
    ssl_certificate_key /etc/ssl/private/soulsynergy.ru.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;

    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 10M;

    # –õ–æ–≥–∏
    access_log /var/log/nginx/ruplatform_access.log;
    error_log /var/log/nginx/ruplatform_error.log;

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    location / {
        root /home/node/ruplatform/client/dist;
        try_files $uri $uri/ /index.html;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
    }

    # API –º–∞—Ä—à—Ä—É—Ç—ã
    location /api/ {
        proxy_pass http://localhost:3000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Socket.IO –¥–ª—è —á–∞—Ç–æ–≤
    location /socket.io/ {
        proxy_pass http://localhost:3000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ñ–∞–π–ª–∞–º
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
EOF

    # –í–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥
    sudo ln -sf /etc/nginx/sites-available/ruplatform-ssl /etc/nginx/sites-enabled/
    sudo rm -f /etc/nginx/sites-enabled/ruplatform
    sudo rm -f /etc/nginx/sites-enabled/default

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    sudo nginx -t && sudo systemctl reload nginx
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
echo "1. –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
create_self_signed_cert

echo "2. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ standalone..."
if try_standalone_certbot; then
    echo "‚úÖ –ü–æ–ª—É—á–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç Let's Encrypt"
else
    echo "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
    echo "   (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)"
fi

echo "3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx..."
configure_nginx_ssl

echo "4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."
if sudo nginx -t; then
    echo "‚úÖ nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    sudo systemctl reload nginx
    echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS (—Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –∏–ª–∏ –±–µ–∑, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞)"
    echo "üîÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑: sudo certbot --nginx -d soulsynergy.ru -d www.soulsynergy.ru"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx"
fi

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
