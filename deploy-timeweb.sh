#!/bin/bash

# üöÄ –°–ö–†–ò–ü–¢ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø –ù–ê TIMEWEB
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: ./deploy-timeweb.sh your-server-ip yourdomain.timeweb.ru

set -e

SERVER_IP=$1
DOMAIN=$2

if [ -z "$SERVER_IP" ] || [ -z "$DOMAIN" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-timeweb.sh <server-ip> <domain>"
    echo "–ü—Ä–∏–º–µ—Ä: ./deploy-timeweb.sh 192.168.1.100 mysite.timeweb.ru"
    exit 1
fi

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Timeweb..."
echo "üì° –°–µ—Ä–≤–µ—Ä: $SERVER_IP"
echo "üåê –î–æ–º–µ–Ω: $DOMAIN"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∏–ª–¥–æ–≤
if [ ! -d "client/dist" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ client/dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç: cd client && npm run build"
    exit 1
fi

if [ ! -d "server/dist" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ server/dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: cd server && npm run build"
    exit 1
fi

echo "‚úÖ –ë–∏–ª–¥—ã –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ production .env
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ production .env..."
cat > server/.env.production << EOF
DATABASE_URL=postgresql://gen_user:OCS(ifoR||A5$~@40e0a3b39459bee0b2e47359.twc1.net:5432/default_db
JWT_SECRET=timeweb_production_secret_$(date +%s)
PORT=3000
NODE_ENV=production
CLIENT_URL=https://$DOMAIN
EOF

echo "‚úÖ .env.production —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > server/ecosystem.config.js << EOF
module.exports = {
  apps: [{
    name: 'ruplatform-server',
    script: './dist/index.js',
    cwd: '/var/www/ruplatform/server',
    instances: 1,
    exec_mode: 'fork',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    },
    error_file: './logs/err.log',
    out_file: './logs/out.log',
    log_file: './logs/combined.log',
    time: true,
    restart_delay: 1000,
    max_restarts: 10
  }]
};
EOF

echo "‚úÖ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > nginx-site.conf << EOF
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    
    # React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    root /var/www/ruplatform/client/dist;
    index index.html;
    
    # Gzip —Å–∂–∞—Ç–∏–µ
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    location / {
        try_files \$uri \$uri/ /index.html;
        add_header Cache-Control "public, max-age=31536000";
    }
    
    # API –∑–∞–ø—Ä–æ—Å—ã –∫ Node.js —Å–µ—Ä–≤–µ—Ä—É
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Socket.IO
    location /socket.io/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

echo "‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏..."
tar -czf ruplatform-deploy.tar.gz \
    client/dist/ \
    server/dist/ \
    server/package.json \
    server/package-lock.json \
    server/.env.production \
    server/ecosystem.config.js \
    nginx-site.conf

echo "‚úÖ –ê—Ä—Ö–∏–≤ ruplatform-deploy.tar.gz —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
cat > install-on-server.sh << 'EOF'
#!/bin/bash

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
apt install -y nodejs

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 –∏ Nginx
npm install -g pm2
apt install -y nginx

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
mkdir -p /var/www/ruplatform
cd /var/www/ruplatform

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –∞—Ä—Ö–∏–≤ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω)
tar -xzf ruplatform-deploy.tar.gz

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–µ—Ä–≤–µ—Ä–∞
cd server
npm install --production
mkdir -p logs

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
cp ../nginx-site.conf /etc/nginx/sites-available/ruplatform
ln -sf /etc/nginx/sites-available/ruplatform /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl reload nginx

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 start ecosystem.config.js
pm2 save
pm2 startup

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://soulsynergy.ru"
echo "üìä –õ–æ–≥–∏: pm2 logs"
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart ruplatform-server"
EOF

chmod +x install-on-server.sh

echo ""
echo "üéâ –ü–û–î–ì–û–¢–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "üì¶ –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é:"
echo "   ‚úÖ ruplatform-deploy.tar.gz - –∞—Ä—Ö–∏–≤ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"
echo "   ‚úÖ install-on-server.sh - —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
echo ""
echo "üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo ""
echo "1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä:"
echo "   scp ruplatform-deploy.tar.gz root@$SERVER_IP:/tmp/"
echo "   scp install-on-server.sh root@$SERVER_IP:/tmp/"
echo ""
echo "2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É:"
echo "   ssh root@$SERVER_IP"
echo "   cd /tmp"
echo "   chmod +x install-on-server.sh"
echo "   ./install-on-server.sh"
echo ""
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):"
echo "   apt install -y certbot python3-certbot-nginx"
echo "   certbot --nginx -d $DOMAIN -d www.$DOMAIN"
echo ""
echo "üåê –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$DOMAIN"
echo ""

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f nginx-site.conf

echo "‚ú® –ì–æ—Ç–æ–≤–æ! –£–¥–∞—á–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è! üöÄ"
